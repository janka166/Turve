import os
from cryptography.fernet import Fernet

# encryption key
key_location = 'secret.key'
with open(key_location, 'rb') as key_storage:
    secret_key = key_storage.read()

decryptor = Fernet(secret_key)


def file_decryption_process(encrypted_file_path):
    with open(encrypted_file_path, 'rb') as file_with_encrypted_data:
        data_to_decrypt = file_with_encrypted_data.read()

    original_data = decryptor.decrypt(data_to_decrypt)

    original_file_path = encrypted_file_path.replace('.malware', '')
    with open(original_file_path, 'wb') as file_with_decrypted_data:
        file_with_decrypted_data.write(original_data)
        os.remove(encrypted_file_path)


def process_encrypted_directory(directory_with_encrypted_files):
    print(f"Processing encrypted files in: {directory_with_encrypted_files}")
    for root_directory, directories, files in os.walk(directory_with_encrypted_files):
        for file_name in files:
            if file_name.endswith('.malware'):
                encrypted_file_location = os.path.join(root_directory, file_name)
                file_decryption_process(encrypted_file_location)


target_directory_for_decryption = './test/'
process_encrypted_directory(target_directory_for_decryption)
print("Decryption is completed.")